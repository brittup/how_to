###Setup Isilon and client for CDP7

CM 7.4
CDP 7.1.7

-setup System zone for SmartConnect
-build hdfs root
-setup hdfs configuration
-install iht and create users/group & dirs
-setup linux for cdp
-install CM
-setup kerberos on OneFS & CM 
-



###On Isilon
###Setup smartconnect for isilon  --- standard isilon SC setup and network setup
test ssip & sc, forward and reverse DNS on smartconnect
###setup SmartConnect on Isilon

isi license add --evaluation=SMARTCONNECT_ADVANCED
isi license add --evaluation=HDFS

isi services enable hdfs
isi services -a | grep hdfs

isi network subnets modify groupnet0.subnet0 --sc-service-addr=192.168.1.100 --sc-service-name=ssip-isilon.demo.local
isi network pools create --id=groupnet0:subnet0:pool1 --ranges=192.168.1.60-192.168.1.99  --access-zone=System  --alloc-method=dynamic  --ifaces=1-4:ext-1 --sc-subnet=subnet0  --sc-dns-zone=cdp.demo.local    --description=cdp_pool

-open PowerShell prompt from Start Menu

Add-DnsServerZoneDelegation -Name "demo.local" -ChildZoneName "cdp" -NameServer "ssip-isilon.demo.local" -IPAddress 192.168.1.100


###Hadoop root setup
mkdir /ifs/cdp7
mkdir /ifs/cdp7/hadoop-root
chmod 755 /ifs/cdp7
chmod 755 /ifs/cdp7/hadoop-root
cd /ifs/cdp7/hadoop-root
touch system.txt
touch <smartconnectname>.txt

isi hdfs settings modify --zone=System --root-directory=/ifs/cdp7/hadoop-root


###Linux
create users and dirs: https://github.com/Isilon/isilon_hadoop_tools

yum install install python3-pip
yum install python3-virtualenv

cd /root
mkdir virtualenv
cd virtualenv/

virtualenv-v3 isilon_hadoop_tools
cd isilon_hadoop_tools/
source bin/activate
pip install isilon_hadoop_tools

isilon_create_users --zone=System  --onefs-user=root --onefs-password=Password123! --dist=cdp --start-uid=5000 --start-gid=5000   X.X.X.X --no-verify

isilon_create_directories  --zone=System --no-verify --onefs-user=root --onefs-password=Password123! --dist=cdp  X.X.X.X


chmod 777 xxxxxxxxxxx-System-cdp.sh
./xxxxxxxxxxx-zone-cdh6-cdh.sh
cat /etc/passwd

#copy script to any other hosts and run
scp xxxxxxxxxxx-System-cdp.sh root@192.168.1.X:/root


###Onefs RBAC setup
isi auth roles create --name=hdfs_access --description="Bypass FS permissions" --zone=System
isi auth roles modify hdfs_access --add-priv=ISI_PRIV_IFS_RESTORE --zone=System
isi auth roles modify hdfs_access --add-priv=ISI_PRIV_IFS_BACKUP --zone=System


isi auth roles modify hdfs_access --add-user=hdfs --zone=System
isi auth roles view hdfs_access --zone=System
isi_for_array "isi auth mapping flush --all"
isi_for_array "isi auth cache flush --all"




###join AD & setup for rfc2307
isi auth ads create demo.local administrator --password=Password123!
isi auth ads list
isi zone zones modify System --add-auth-providers=lsa-activedirectory-provider:DEMO.LOCAL
isi zone zones list -v
isi hdfs settings modify --zone=System --authentication-mode=kerberos_only

isi auth ads modify DEMO.LOCAL --sfu-support=rfc2307
isi auth ads modify DEMO.LOCAL --store-sfu-mappings=true
isi auth ads modify DEMO.LOCAL --allocate-uids=false
isi auth ads modify DEMO.LOCAL --allocate-gids=false
isi auth ads modify DEMO.LOCAL --assume-default-domain=true

###Linux Client Prep
yum -y update
yum -y groupinstall "Development tools"

systemctl disable firewalld
systemctl stop firewalld


hostnamectl set-hostname fqdn
hostnamectl

vi /etc/selinux/config

#set to disable

yum -y install ntp

systemctl start ntpd
systemctl enable ntpd


#Cloudera Host inspector fixes
echo never > /sys/kernel/mm/transparent_hugepage/defrag
echo never > /sys/kernel/mm/transparent_hugepage/enabled


vi /etc/rc.local

if test -f /sys/kernel/mm/transparent_hugepage/enabled; then
   echo never > /sys/kernel/mm/transparent_hugepage/enabled
fi
if test -f /sys/kernel/mm/transparent_hugepage/defrag; then
   echo never > /sys/kernel/mm/transparent_hugepage/defrag
fi


vi /etc/sysctl.conf 
#(Add at the end) G, o - esc:wq
	
vm.swappiness=10

yum -y install krb5-workstation krb5-libs openldap-clients


reboot

###review host
cat /proc/sys/vm/swappiness


###install CM and CDP
### https://www.cloudera.com/downloads/cdp-private-cloud-trial/cdp-private-cloud-base-trial.html
### wget https://archive.cloudera.com/cm7/7.1.4/cloudera-manager-installer.bin


wget https://archive.cloudera.com/cm7/7.4.4/cloudera-manager-installer.bin
chmod u+x cloudera-manager-installer.bin
./cloudera-manager-installer.bin

systemctl status cloudera-scm-server
systemctl status cloudera-scm-server-db



http://X.X.X.X:7180
admin | admin


Create OU - cdp7
Create AD cdp account - cdp7-admin
Assign AD role on OU

Kerberize CDP7

DEMO.LOCAL
launchpad.demo.local
launchpad.demo.local
demo.local
ou=cdp7,DC=demo,DC=local

-let cdp manage krb5.conf

-user added to AD and delegated

-Modify OneFS Access Zone to use Kerberos only
-Join AD and Zone to AD 
-Check SPN's on isilon


If using PowerScale CSD:


download and copy powerscale csd jar from: https://github.com/brittup/how_to/tree/master/hadoop/cdp7

cp PowerScale-1.1.0.jar /opt/cloudera/cm/csd 
ls -al /opt/cloudera/cm/csd
reboot

tail -f /var/log/cloudera/cloudera-scm-server


###Deploy & Install CDP

Not in this doc


hdfs://cdp7.demo.local:8020


###add test users to host
useradd -u 456456 -d /home/cdp7-user1 -m cdp7-user1 

###add users to AD + rfc2307 atribs
create AD grp cdp7-grp1
create AD user cdp7-user1
Add rfc2307 attribs: uidnumber, loginShell, gidNumber, homeDirectory

###make hdfs home
cd /ifs/cdp7/hadoop-root/user
mkdir cdp7-user1
chown cdp7-user1:cdp7-grp1 cdp7-user1
chmod 700 cdp7-user1


###test hdfs
su - cdp7-user1
kinit
klist -e
hdfs dfs -ls /


yarn jar /opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar pi 10 100

yarn jar /opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar teragen 10000 /user/cdp7-user1/gen
yarn jar /opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar terasort /user/cdp7-user1/gen /user/cdp7-user1/sort
yarn jar /opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar teravalidate /user/cdp7-user1/sort /user/cdp7-user1/validate


###Ranger
isi_for_array isi hdfs log-level modify --set=verbose
isi hdfs ranger-plugin settings modify --policy-manager-url=http://<ranger sever FQDN>:6182
isi hdfs ranger-plugin settings modify --repository-name=cm_hdfs
isi hdfs ranger-plugin settings modify --enabled=true

isi_for_array tail -f /var/log/hdfs.log

#status of agent
systemctl status cloudera-scm-agent






