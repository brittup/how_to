
###install Docker
###From: https://docs.docker.com/engine/install/centos/
#curl -fsSL https://get.docker.com -o get-docker.sh
#sh get-docker.sh


yum install -y yum-utils yum-utils device-mapper-persistent-data lvm2
yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
 
#yum list docker-ce --showduplicates | sort -r
#yum list docker-ce-19.03.9 docker-ce-cli-19.03.9 containerd.io
#yum install docker-ce docker-ce-cli containerd.io

yum install docker-ce-19.03.9 docker-ce-cli-19.03.9 containerd.io

systemctl enable docker.service
systemctl start docker
docker run -it --rm ubuntu /bin/bash

docker ps --all



###install Kubernetes
###https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/

service firewalld stop
systemctl disable firewalld

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

sysctl --system
sed -i '/swap/d' /etc/fstab
swapoff -a
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

vi /etc/hosts

Add IP - hostnames of k8 hosts


cat <<EOF |tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=0
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF

cat /etc/yum.repos.d/kubernetes.repo

#yum list kube* --showduplicates | sort -r
#yum install kubelet kubeadm kubectl --disableexcludes=kubernetes
#yum install kubelet-1.14.1* kubeadm-1.14.1* kubectl-1.14.1* --disableexcludes=kubernetes
yum install kubelet-1.19.8-0 kubeadm-1.19.8-0 kubectl-1.19.8-0 --disableexcludes=kubernetes


systemctl enable kubelet
systemctl start kubelet

###deploy kubernetes cluster
kubeadm init --pod-network-cidr=10.244.0.0/16

<see output for node info>


mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config
cat $HOME/.kube/config

export KUBECONFIG=/etc/kubernetes/admin.conf 
echo "export KUBECONFIG=/etc/kubernetes/admin.conf" >> /root/.bash_profile
docker ps --all


###
###deploy a pod network to the cluster.
###Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
###https://kubernetes.io/docs/concepts/cluster-administration/addons/


yum install -y wget
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
#wget https://cloud.weave.works/k8s/v1.13/net.yaml --no-check-certificate
#kubectl apply -f net.yaml

kubectl get nodes
kubectl get pods -A


### if reset needed
kubeadm reset






###isilon setup 
isi auth groups create --zone=System --name=k8 --provider=local
isi auth users create --zone=System --name=k8 --set-password --enabled=true --provider=local --primary-group=k8

(use Password123!)

isi auth roles create --name=k8-csi --description="K8-CSI role" --zone=System
isi auth roles modify k8-csi --add-priv=ISI_PRIV_LOGIN_PAPI --zone=System
isi auth roles modify k8-csi --add-priv=ISI_PRIV_NFS --zone=System
isi auth roles modify k8-csi --add-priv=ISI_PRIV_QUOTA --zone=System
isi auth roles modify k8-csi --add-priv=ISI_PRIV_SNAPSHOT --zone=System
isi auth roles modify k8-csi --add-priv=ISI_PRIV_IFS_RESTORE --zone=System
isi auth roles modify k8-csi --add-priv=ISI_PRIV_NS_IFS_ACCESS --zone=System
isi auth roles modify k8-csi --add-priv=ISI_PRIV_LOGIN_SSH --zone=System
isi auth roles modify k8-csi --add-user=k8 --zone=System
isi auth roles view k8-csi --zone=System
isi auth users view --zone=System --user=k8
mkdir /ifs/csi
chmod 777 /ifs/csi



###CSI driver install
### On K8 linux:
####https://github.com/dell/csi-powerscale

curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh


yum install -y git
mkdir git
cd git
git clone https://github.com/dell/csi-isilon.git


###add the following
vi /etc/systemd/system/multi-user.target.wants/docker.service

[Service]

MountFlags=shared


systemctl daemon-reload
systemctl restart docker


kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/v3.0.2/deploy/kubernetes/snapshot-controller/rbac-snapshot-controller.yaml
kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/v3.0.2/deploy/kubernetes/snapshot-controller/setup-snapshot-controller.yaml


cd ~/git/csi-isilon
cp helm/csi-isilon/values.yaml my-isilon-settings.yaml
vi my-isilon-settings.yaml


edit:
isiIP: 10.246.156.13
isiPath: "/ifs/csi"

kubectl create namespace isilon

#create user & password
echo -n 'k8' | base64
azg=

echo -n 'Password123!' | base64
UGFzc3dvcmQxMjMh


vi helm/secret.yaml
(copy user & password info)
apiVersion: v1
kind: Secret
metadata:
  name: isilon-creds
  namespace: isilon
type: Opaque
data:
  # set username to the base64 encoded username
  username: azg=
  # set password to the base64 encoded password
  password: UGFzc3dvcmQxMjMh



kubectl create -f helm/secret.yaml

kubectl create -f helm/emptysecret.yaml

cd dell-csi-helm-installer



https://github.com/dell/csi-powerscale/blob/master/dell-csi-helm-installer/README.md


kubectl describe node centos-11.foo.com | grep Taint
    taints:             node-role.kubernetes.io/master:NoSchedule
kubectl taint nodes centos-11.foo.com node-role.kubernetes.io/master-


watch kubectl get pods -A  


 ./verify.sh --namespace isilon --values ~/git/csi-isilon/my-isilon-settings.yaml  --snapshot-crd



./csi-install.sh --namespace isilon --values ~/git/csi-isilon/my-isilon-settings.yaml  --snapshot-crd 



# ./csi-uninstall.sh --namespace isilon
































cd test/helm
kubectl create namespace test
starttest.sh -n -t 2vols
kubectl get pv
kubectl get pvc







kubectl get pv -ti -n test isilontest-0 bash









kubectl apply -f secret.yaml
kubectl get secrets -n isilon


kubectl get namespace
kubectl get sc
kubectl get crd

kubectl get nodes
vi /var/lib/kubelet/config.yaml
vi /etc/kubernetes/kubelet.conf
vi /etc/kubernetes/manifests/kube-apiserver.yaml


kubectl get pods -A
kubectl get pods --namespace isilon
kubectl describe pod isilon-controller-5f9595d8cb-qcclk --namespace isilon

 kubectl logs isilon-controller-5f9595d8cb-mtsrq -n isilon -c driver


cd helm
./reveal_secret



















