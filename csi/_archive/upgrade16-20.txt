######Upgrade Driver from version v1.6.0 to v2.0

git clone -b v2.0.0 https://github.com/dell/csi-powerscale.git


###move old csi-isilon to csi-isilon-vX

mv csi-powerscale csi-isilon

####edit secrets.json
cd ~/git/csi-isilon/samples/secret/
vi secret.yaml



isilonClusters:
    # logical name of PowerScale Cluster
  - clusterName: "cluster1"

    # username for connecting to PowerScale OneFS API server
    # Default value: None
    username: "k8"

    # password for connecting to PowerScale OneFS API server
    password: "Password123!"

    # HTTPS endpoint of the PowerScale OneFS API server
    # Default value: None
    # Examples: "1.2.3.4", "https://1.2.3.4", "https://abc.myonefs.com"
    endpoint: "cascade-system.foo.com"

    # Is this a default cluster (would be used by storage classes without ClusterName parameter)
    # Allowed values:
    #   true: mark this cluster config as default
    #   false: mark this cluster config as not default
    # Default value: false
    isDefault: true

    # Specify whether the PowerScale OneFS API server's certificate chain and host name should be verified.
    # Allowed values:
    #   true: skip OneFS API server's certificate verification
    #   false: verify OneFS API server's certificates
    # Default value: default value specified in values.yaml
    # skipCertificateValidation: true

    # The base path for the volumes to be created on PowerScale cluster
    # This will be used if a storage class does not have the IsiPath parameter specified.
    # Ensure that this path exists on PowerScale cluster.
    # Allowed values: unix absolute path
    # Default value: default value specified in values.yaml
    # Examples: "/ifs/data/csi", "/ifs/engineering"
    # isiPath: "/ifs/data/csi"

    # The permissions for isi volume directory path
    # This will be used if a storage class does not have the IsiVolumePathPermissions parameter specified.
    # Allowed values: valid octal mode number
    # Default value: "0777"
    # Examples: "0777", "777", "0755"
    # isiVolumePathPermissions: "0777"

  - clusterName: "cluster2"
    username: "user"
    password: "password"
    endpoint: "1.2.3.4"
    endpointPort: "8080"




###delete existing secrets
kubectl get secret -n isilon
kubectl delete secret isilon-certs-0 -n isilon
kubectl delete secret isilon-creds -n isilon
kubectl get secret -n isilon


###create isilon-creds secret
kubectl create secret generic isilon-creds -n isilon --from-file=config=secret.yaml -o yaml --dry-run=client | kubectl apply -f -

kubectl create -f empty-secret.yaml

kubectl get secret -n isilon
kubectl get secret isilon-creds -o yaml -n isilon



###copy the helm/csi-isilon/values.yaml into a new location with a custom name say my-isilon-settings.yaml, '
###to customize settings for installation. Edit my-isilon-settings.yaml 

cp helm/csi-isilon/values.yaml my-isilon-settings.yaml


<see the older version for settings> -- vi ~/git/csi-isilon-1.6/my-isilon-settings.yaml
###update or edit any required settings




###
Upgrading from CSI PowerScale v1.6 driver The storage classes created as part of the installation have an 
annotation - “helm.sh/resource-policy”: keep set. This ensures that even after an uninstall or upgrade, 
the storage classes are not deleted. You can continue using these storage classes if you wish so.

###review the old storage class 
cat ~/git/csi-isilon-1.6/my-isilon-sc.yaml 

cp samples/storageclass/isilon.yaml my-isilon-sc.yaml

###edit and update to reflect sc -  my-isilon-sc.yaml 
vi my-isilon-sc.yaml 

kubectl get sc
kubectl delete storageclass isilon
kubectl get sc

kubectl create -f ~/git/csi-isilon/my-isilon-sc.yaml
kubectl get sc 


###add another session 
watch kubectl get pods -A  

cd ~/git/csi-isilon/dell-csi-helm-installer
./verify.sh --namespace isilon --values ~/git/csi-isilon/my-isilon-settings.yaml

./csi-install.sh --namespace isilon --values ~/git/csi-isilon/my-isilon-settings.yaml --upgrade 

kubectl get pods --namespace isilon




###

kubectl get pods --namespace isilon
kubectl get pods -A


kubectl describe pod <name> -n test

kubectl get pv -A
kubectl get pvc -A

kubectl get pv -n test
kubectl get pvc -n test
kubectl get pods -n test
kubectl describe pods <name> -n test


kubectl exec -ti -n test isilontest-0 bash


###test new volume
cd /root/git/csi-isilon/test/sample_files
cat pvc.yaml
cat nginx.yaml

kubectl create -f pvc.yaml
kubectl get pvc

cat nginx.yaml
kubectl create -f nginx.yaml

kubectl get pvc
kubectl get pv

kubectl get pods -n default
kubectl exec -ti -n default ngnix-pv-pod bash

#drop a file here 
ls -al /usr/share/nginx/html
