isi zone zones create --name=zone-cdh6 --path=/ifs/cdh6/hadoop --create-path
mkdir -p /ifs/cdh6/hadoop/hadoop-root
isi network pools create --id=groupnet0:subnet0:hadoop-cdh6-pool --ranges=10.246.156.34-10.246.156.34  --access-zone=zone-cdh6  --alloc-method=dynamic  --ifaces=1:ext-1 --sc-subnet=subnet0  --sc-dns-zone=isilonsczone-cdh6.foo.com    --description=hadoop_access_zone
isi hdfs settings modify --zone=zone-cdh6 --root-directory=/ifs/cdh6/hadoop/hadoop-root
touch /ifs/cdh6/hadoop/hadoop-root/THIS_IS_ISILON_zone-cdh6-hadoop.txt
isi auth roles create --name=hdfs_access --description="Bypass FS permissions" --zone=zone-cdh6
isi auth roles modify hdfs_access --add-priv=ISI_PRIV_IFS_RESTORE --zone=zone-cdh6
isi auth roles modify hdfs_access --add-priv=ISI_PRIV_IFS_BACKUP --zone=zone-cdh6



isi zone zones list --verbose
isi network subnets list --verbose
isi network pools list --verbose
isi network pools view --id=groupnet0:subnet0:hadoop-cdh6-pool
isi hdfs settings view --zone=zone-cdh6
ls -al /ifs/cdh6/hadoop/hadoop-root
ls -al /ifs/cdh6/hadoop/hadoop-root/user



###create users and directories - on linux host
https://github.com/Isilon/isilon_hadoop_tools

yum install python36 python36-pip
python3 -m pip install --user pipx
python3 -m pipx ensurepath
pipx install isilon_hadoop_tools

isilon_create_users --zone=zone-cdh6 --no-verify --onefs-user=root --onefs-password=a --dist=cdh --start-uid=500 --start-gid=500  --log-level=debug 10.246.156.33                   
isilon_create_directories  --zone=zone-cdh6 --no-verify --onefs-user=root --onefs-password=a --dist=cdh  10.246.156.33

chmod 777 xxxxxxxxxxx-zone-cdh6-cdh.sh
./xxxxxxxxxxx-zone-cdh6-cdh.sh
cat /etc/passwd



###complete RBAC now users are setup - on isilon
isi auth roles modify hdfs_access --add-user=hdfs --zone=zone-cdh6
isi auth roles view hdfs_access --zone=zone-cdh6
isi_for_array "isi auth mapping flush --all"
isi_for_array "isi auth cache flush --all"



###install CM
https://docs.cloudera.com/documentation/enterprise/latest/topics/release_notes.html
https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/install_cm_cdh.html/etc/my.cnf
https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_cm_6_version_download.html


systemctl disable firewalld
systemctl stop firewalld
vi /etc/sysconfig/network
	HOSTNAME=centos-10.foo.com
vi /etc/hosts
	10.246.156.21   centos-10.foo.com centos-10
vi /etc/selinux/config
yum install ntp
vi /etc/ntp.conf
systemctl start ntpd
systemctl enable ntpd
ntpdate -u time.isilon.com
yum install python27
python --version


echo never > /sys/kernel/mm/transparent_hugepage/defrag
echo never > /sys/kernel/mm/transparent_hugepage/enabled

vi /etc/rc.local
if test -f /sys/kernel/mm/transparent_hugepage/enabled; then
   echo never > /sys/kernel/mm/transparent_hugepage/enabled
fi
if test -f /sys/kernel/mm/transparent_hugepage/defrag; then
   echo never > /sys/kernel/mm/transparent_hugepage/defrag
fi

sysctl -w  vm.swappiness=10
vi /etc/sysctl.conf 
	vm.swappiness=10
	
	

wget https://archive.cloudera.com/cm6/6.3.1/redhat7/yum/cloudera-manager.repo -P /etc/yum.repos.d
rpm --import https://archive.cloudera.com/cm6/6.3.1/redhat7/yum/RPM-GPG-KEY-cloudera
yum -y install oracle-j2sdk1.8
yum -y install cloudera-manager-daemons cloudera-manager-agent cloudera-manager-server



yum install mariadb-server
systemctl stop mariadb

vi cat /etc/my.cnf

[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
transaction-isolation = READ-COMMITTED
# Disabling symbolic-links is recommended to prevent assorted security risks;
# to do so, uncomment this line:
symbolic-links = 0
# Settings user and group are ignored when systemd is used.
# If you need to run mysqld under a different user or group,
# customize your systemd unit file for mariadb according to the
# instructions in http://fedoraproject.org/wiki/Systemd

key_buffer = 16M
key_buffer_size = 32M
max_allowed_packet = 32M
thread_stack = 256K
thread_cache_size = 64
query_cache_limit = 8M
query_cache_size = 64M
query_cache_type = 1

max_connections = 550
#expire_logs_days = 10
#max_binlog_size = 100M

#log_bin should be on a disk with enough free space.
#Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your
#system and chown the specified folder to the mysql user.
log_bin=/var/lib/mysql/mysql_binary_log

#In later versions of MariaDB, if you enable the binary log and do not set
#a server_id, MariaDB will not start. The server_id must be unique within
#the replicating group.
server_id=1

binlog_format = mixed

read_buffer_size = 2M
read_rnd_buffer_size = 16M
sort_buffer_size = 8M
join_buffer_size = 8M

# InnoDB settings
innodb_file_per_table = 1
innodb_flush_log_at_trx_commit  = 2
innodb_log_buffer_size = 64M
innodb_buffer_pool_size = 4G
innodb_thread_concurrency = 8
innodb_flush_method = O_DIRECT
innodb_log_file_size = 512M

[mysqld_safe]
log-error=/var/log/mariadb/mariadb.log
pid-file=/var/run/mariadb/mariadb.pid

#
# include all files from the config directory
#
!includedir /etc/my.cnf.d


systemctl enable mariadb
systemctl start mariadb
/usr/bin/mysql_secure_installation


[...]
Enter current password for root (enter for none):
OK, successfully used password, moving on...
[...]
Set root password? [Y/n] Y
New password: password
Re-enter new password: password
[...]
Remove anonymous users? [Y/n] Y
[...]
Disallow root login remotely? [Y/n] N
[...]
Remove test database and access to it [Y/n] Y
[...]
Reload privilege tables now? [Y/n] Y
[...]
All done!  If you've completed all of the above steps, your MariaDB
installation should now be secure.



wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.46.tar.gz
tar zxvf mysql-connector-java-5.1.46.tar.gz
yum install mysql-connector-*
or
mkdir -p /usr/share/java/
cd mysql-connector-java-5.1.46
cp mysql-connector-java-5.1.46-bin.jar /usr/share/java/mysql-connector-java.jar

mysql -u root -p
password

CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
CREATE DATABASE amon DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
CREATE DATABASE rman DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
CREATE DATABASE sentry DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
CREATE DATABASE nav DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
CREATE DATABASE navms DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;


GRANT ALL ON scm.* TO 'scm'@'%' IDENTIFIED BY 'password';
GRANT ALL ON amon.* TO 'amon'@'%' IDENTIFIED BY 'password';
GRANT ALL ON rman.* TO 'rman'@'%' IDENTIFIED BY 'password';
GRANT ALL ON hue.* TO 'hue'@'%' IDENTIFIED BY 'password';
GRANT ALL ON metastore.* TO 'hive'@'%' IDENTIFIED BY 'password';
GRANT ALL ON sentry.* TO 'sentry'@'%' IDENTIFIED BY 'password';
GRANT ALL ON nav.* TO 'nav'@'%' IDENTIFIED BY 'password';
GRANT ALL ON navms.* TO 'navms'@'%' IDENTIFIED BY 'password';
GRANT ALL ON oozie.* TO 'oozie'@'%' IDENTIFIED BY 'password';

SHOW DATABASES;

SHOW GRANTS FOR 'scm'@'%';
SHOW GRANTS FOR 'amon'@'%';
SHOW GRANTS FOR 'rman'@'%';
SHOW GRANTS FOR 'hue'@'%';
SHOW GRANTS FOR 'hive'@'%';
SHOW GRANTS FOR 'sentry'@'%';
SHOW GRANTS FOR 'sentry'@'%';
SHOW GRANTS FOR 'nav'@'%';
SHOW GRANTS FOR 'navms'@'%';
SHOW GRANTS FOR 'oozie'@'%';

exit;

/opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm password

/opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm


systemctl start cloudera-scm-server
service cloudera-scm-server start
tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log

http://10.246.156.21:7180/
