sudo -i   
swapoff -a

10.15.2.70    master1
10.15.2.51    worker1
10.15.2.119   worker2


hostnamectl set-hostname master1
vi /etc/hosts

hostnamectl set-hostname worker1
vi /etc/hosts

hostnamectl set-hostname worker2
vi /etc/hosts


Container Runtimes | Kubernetes

https://github.com/cubensquare/containerd-installation/blob/main/containerd-installation-steps.md
https://github.com/cubensquare/K8S-v1.26-installation-containerd/blob/main/INSTALLATION%20STEPS.md


1. containerd install


Setup and Install containerd:
Visit Getting started with containerd and follow the instructions there, up to the point where you have a valid configuration file (on Linux: /etc/containerd/config.toml).
From <https://kubernetes.io/docs/setup/production-environment/container-runtimes/> 

vi install-containerd.sh 

#!/bin/bash
cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
EOF
sudo modprobe overlay
sudo modprobe br_netfilter
# Setup required sysctl params, these persist across reboots.

cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF
# Apply sysctl params without reboot
sudo sysctl --system
sudo apt-get update


chmod a+x install-containerd.sh 
./install-containerd.sh 


# Install & Configure containerd with defaults and restart with this config

wget https://github.com/containerd/containerd/releases/download/v1.6.14/containerd-1.6.14-linux-amd64.tar.gz
sudo tar Cxzvf /usr/local containerd-1.6.14-linux-amd64.tar.gz
wget https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64
sudo install -m 755 runc.amd64 /usr/local/sbin/runc
wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
sudo mkdir -p /opt/cni/bin
sudo tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.1.1.tgz
sudo mkdir /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml
sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
sudo curl -L https://raw.githubusercontent.com/containerd/containerd/main/containerd.service -o /etc/systemd/system/containerd.service
sudo systemctl daemon-reload
sudo systemctl enable --now containerd
sudo systemctl status containerd


2. Install k8 components
###Installing kubeadm | Kubernetes

##to see versions apt-cache madison kubeadmin

vi install-k8s-components.sh    -- change the K8 version

# Install packages needed to use the Kubernetes apt repository
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl
# Download the Google Cloud public signing key
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
# Add the Kubernetes apt repository
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
# Install kubelet, kubeadm & kubectl, and pin their versions
sudo apt-get update
# check available kubeadm versions (when manually executing)
apt-cache madison kubeadm
# Install version 1.2x.0 for all components
sudo apt-get install -y kubelet=1.2x.0-00 kubeadm=1.2x.0-00 kubectl=1.2x.0-00
sudo apt-mark hold kubelet kubeadm kubectl
## apt-mark hold prevents package from being automatically upgraded or removed


chmod a+x install-k8s-components.sh
./install-k8s-components.sh

kubeadm version

apt-cache madison kubeadmin




3. Initialize K8 cluster

#### setup k8 cluster
sudo kubeadm init
