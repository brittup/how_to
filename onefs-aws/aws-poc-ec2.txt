
###ami-image-id =  ami-063148269a149ba38
###instance-type = m5dn.8xlarge
###placement-group-name = onefs-v1-onefs-placement-group 
###aws-region = us-east-1
###block-device-mappings = file://block-device-mappings-vonefs.json 
###clustername = onefs-v1

4 node
gp3
5 EBS volumes
15

First node external network interface ID		eni-0e5203a6b68b92a55
First node internal network interface ID		eni-012ea884544c8ba5a

Second node external network interface ID		eni-022d23a416baab62e 
Second node internal network interface ID		eni-00530dff983a2a1ac

Third node external network interface ID		eni-05d21f8bd75c00a51
Third node internal network interface ID		eni-0d69ca110570c7867

Fourth node external network interface ID		eni-099a028c66e9c83ca
Fourth node internal network interface ID		eni-0315781c808e25afd

###node-id = 1
###user-data file://user-data-node-1-vonefs.json
Name,Value=onefs-v1-node1
clustername,Value=onefs-v1

###node-id = 2
###user-data file://user-data-node-2-vonefs.json
Key=Name,Value=onefs-v1-node2
Name,Value=onefs-v1-node1
clustername,Value=onefs-v1

###node-id = 3
###user-data file://user-data-node-3-vonefs.json
Key=Name,Value=onefs-v1-node3
Name,Value=onefs-v1-node1
clustername,Value=onefs-v1

###node-id = 4
###user-data file://user-data-node-4-vonefs.json
Key=Name,Value=onefs-v1-node4
Name,Value=onefs-v1-node1
clustername,Value=onefs-v1


###node1 
aws ec2 --profile=udsawsadmin run-instances --image-id ami-063148269a149ba38 --instance-type m5dn.8xlarge --placement GroupName=onefs-v1-onefs-placement-group --network-interfaces NetworkInterfaceId=eni-012ea884544c8ba5a,DeviceIndex=0 NetworkInterfaceId=eni-0e5203a6b68b92a55,DeviceIndex=1 --region us-east-1 --iam-instance-profile Name=onefs-runtime-instance-profile --user-data file://user-data-node-1-vonefs.json --block-device-mappings file://block-device-mappings-vonefs.json --tag-specifications "ResourceType=instance,Tags=[{Key=clustername,Value=onefs-v1},{Key=Name,Value=onefs-v1-node1}]"


###node2
aws ec2 --profile=udsawsadmin run-instances --image-id ami-063148269a149ba38 --instance-type m5dn.8xlarge --placement GroupName=onefs-v1-onefs-placement-group --network-interfaces NetworkInterfaceId=eni-00530dff983a2a1ac,DeviceIndex=0 NetworkInterfaceId=eni-022d23a416baab62e,DeviceIndex=1 --region us-east-1 --iam-instance-profile Name=onefs-runtime-instance-profile --user-data file://user-data-node-2-vonefs.json --block-device-mappings file://block-device-mappings-vonefs.json --tag-specifications "ResourceType=instance,Tags=[{Key=clustername,Value=onefs-v1},{Key=Name,Value=onefs-v1-node2}]"


###node3
aws ec2 --profile=udsawsadmin run-instances --image-id ami-063148269a149ba38 --instance-type m5dn.8xlarge --placement GroupName=onefs-v1-onefs-placement-group --network-interfaces NetworkInterfaceId=eni-0d69ca110570c7867,DeviceIndex=0 NetworkInterfaceId=eni-05d21f8bd75c00a51,DeviceIndex=1 --region us-east-1 --iam-instance-profile Name=onefs-runtime-instance-profile --user-data file://user-data-node-3-vonefs.json --block-device-mappings file://block-device-mappings-vonefs.json --tag-specifications "ResourceType=instance,Tags=[{Key=clustername,Value=onefs-v1},{Key=Name,Value=onefs-v1-node3}]"


###node4
aws ec2 --profile=udsawsadmin run-instances --image-id ami-063148269a149ba38 --instance-type m5dn.8xlarge --placement GroupName=onefs-v1-onefs-placement-group --network-interfaces NetworkInterfaceId=eni-0315781c808e25afd,DeviceIndex=0 NetworkInterfaceId=eni-099a028c66e9c83ca,DeviceIndex=1 --region us-east-1 --iam-instance-profile Name=onefs-runtime-instance-profile --user-data file://user-data-node-4-vonefs.json --block-device-mappings file://block-device-mappings-vonefs.json --tag-specifications "ResourceType=instance,Tags=[{Key=clustername,Value=onefs-v1},{Key=Name,Value=onefs-v1-node4}]"



######################
######################
###connect to serial console to monitor

######################
access cluster via jump host
######################
aws ec2 describe-instances  --profile=udsawsadmin    --query 'Reservations[*].Instances[*].{Instance:InstanceId,AZ:Placement.AvailabilityZone,Name:Tags[?Key==`Name`]|[0].Value,State:State.Name,IP:PublicIpAddress, IP2:PrivateIpAddress}'  --output table 
ssh -i ~/.ssh/uds-onefs-key1.pem ec2-user@44.199.54.221  



####
Logon to the cluster
isi status
isi auth user list
isi devices node list


isi devices node add SV200-930073-0001 --async

###Check the cluster status by running the following command and wait for the cluster and node health to report a status of OK before you proceed

isi status

###Run the following command to add the third node:

isi devices node add SV200-930073-0002 --async

###Check the cluster status by running the following command and wait for the cluster and node health to report a status of OK before proceeding

isi status

###Run the following command to add the fourth node:

isi devices node add SV200-930073-0003 --async

###Check the cluster status by running the following command and wait for the cluster and node health to report a status of OK before proceeding

isi status






#################
post install setup
#################
aws ec2 describe-instances  --profile=udsawsadmin    --query 'Reservations[*].Instances[*].{Instance:InstanceId,AZ:Placement.AvailabilityZone,Name:Tags[?Key==`Name`]|[0].Value,State:State.Name,IP:PublicIpAddress, IP2:PrivateIpAddress}'     --output table 
ssh -i ~/.ssh/uds-onefs-key1.pem ec2-user@44.199.54.221    --- use ip from above to access jump host, ssh and hop to node 
ssh root@10.15.3.101 


isi network groupnets view groupnet0
isi network subnets view groupnet0.subnet0 
isi network pools view groupnet0.subnet0.pool0 

isi network interfaces list

isi network subnets modify groupnet0.subnet0 --sc-service-addrs=10.15.1.123
isi network subnets modify groupnet0.subnet0 --sc-service-name=ssip1.foo.com.ec2.internal
isi network pools modify  groupnet0.subnet0.pool0 --sc-dns-zone=sc1.foo.com.ec2.internal

isi network subnets view groupnet0.subnet0 
isi network pools view groupnet0.subnet0.pool0 

nslookup sc1.foo.com.ec2.internal 10.15.1.123



isi services nfs enable
isi services smb enable
isi services



#######
Expand a OneFS cluster

###node-id = 5
###user-data file://user-data-node-5-vonefs.json
Key=Name,Value=onefs-v1-node5
Name,Value=onefs-v1-node5
clustername,Value=onefs-v1

###node-id = 6
###user-data file://user-data-node-6-vonefs.json
Key=Name,Value=onefs-v1-node6
Name,Value=onefs-v1-node6
clustername,Value=onefs-v1

Fifth node external network interface ID		eni-0655c3c5ec89e59bd
Fifth node internal network interface ID		eni-04e71310d34e0c569

Sixth node external network interface ID		eni-0c544fab12c1819a9
Sixth node internal network interface ID	    eni-0ef5f6181042cc238


###node1 add
aws ec2 --profile=udsawsadmin run-instances --image-id ami-063148269a149ba38 --instance-type m5dn.8xlarge --placement GroupName=onefs-v1-onefs-placement-group --network-interfaces NetworkInterfaceId=eni-0655c3c5ec89e59bd,DeviceIndex=0 NetworkInterfaceId=eni-04e71310d34e0c569,DeviceIndex=1 --region us-east-1 --iam-instance-profile Name=onefs-runtime-instance-profile --user-data file://user-data-node-5-vonefs.json --block-device-mappings file://block-device-mappings-vonefs.json --tag-specifications "ResourceType=instance,Tags=[{Key=clustername,Value=onefs-v1},{Key=Name,Value=onefs-v1-node5}]"


###node2
aws ec2 --profile=udsawsadmin run-instances --image-id ami-063148269a149ba38 --instance-type m5dn.8xlarge --placement GroupName=onefs-v1-onefs-placement-group --network-interfaces NetworkInterfaceId=eni-0c544fab12c1819a9,DeviceIndex=0 NetworkInterfaceId=eni-0ef5f6181042cc238,DeviceIndex=1 --region us-east-1 --iam-instance-profile Name=onefs-runtime-instance-profile --user-data file://user-data-node-6-vonefs.json --block-device-mappings file://block-device-mappings-vonefs.json --tag-specifications "ResourceType=instance,Tags=[{Key=clustername,Value=onefs-v1},{Key=Name,Value=onefs-v1-node6}]"






