
###get onefs instances
aws ec2 describe-instances  --profile=udsawsadmin  --query 'Reservations[*].Instances[*].{Instance:InstanceId,AZ:Placement.AvailabilityZone,Name:Tags[?Key==`Name`]|[0].Value,State:State.Name,IP:PublicIpAddress, IP2:PrivateIpAddress}' --output table --filters "Name=tag:Name,Values=onefs*"


###get instance_id variable
instance_id1=$(aws ec2 describe-instances  --profile=udsawsadmin  --query 'Reservations[*].Instances[*].{Instance:InstanceId}'  --output text  --filters "Name=tag:Name,Values=onefs-v1-node1")
instance_id2=$(aws ec2 describe-instances  --profile=udsawsadmin  --query 'Reservations[*].Instances[*].{Instance:InstanceId}'  --output text  --filters "Name=tag:Name,Values=onefs-v1-node2")
instance_id3=$(aws ec2 describe-instances  --profile=udsawsadmin  --query 'Reservations[*].Instances[*].{Instance:InstanceId}'  --output text  --filters "Name=tag:Name,Values=onefs-v1-node3")
instance_id4=$(aws ec2 describe-instances  --profile=udsawsadmin  --query 'Reservations[*].Instances[*].{Instance:InstanceId}'  --output text  --filters "Name=tag:Name,Values=onefs-v1-node4")

aws ec2 --profile=udsawsadmin describe-instances --instance-ids $instance_id1 >>node1.txt
aws ec2 --profile=udsawsadmin describe-instances --instance-ids $instance_id2 >>node2.txt
aws ec2 --profile=udsawsadmin describe-instances --instance-ids $instance_id3 >>node3.txt
aws ec2 --profile=udsawsadmin describe-instances --instance-ids $instance_id4 >>node4.txt

###get associated volumes
aws ec2 describe-volumes --profile=udsawsadmin --filters "Name=attachment.instance-id,Values=$instance_id1" --output table
aws ec2 describe-volumes --profile=udsawsadmin --filters "Name=attachment.instance-id,Values=$instance_id2" --output table
aws ec2 describe-volumes --profile=udsawsadmin --filters "Name=attachment.instance-id,Values=$instance_id3" --output table
aws ec2 describe-volumes --profile=udsawsadmin --filters "Name=attachment.instance-id,Values=$instance_id4" --output table


#########################################################################################################################
###Terminate the instance with the extracted ID
aws ec2 terminate-instances --profile=udsawsadmin --instance-ids $instance_id1
aws ec2 terminate-instances --profile=udsawsadmin --instance-ids $instance_id2
aws ec2 terminate-instances --profile=udsawsadmin --instance-ids $instance_id3
aws ec2 terminate-instances --profile=udsawsadmin --instance-ids $instance_id4



###Review 
policy_name="onefs-runtime-policy"
tag_key="clustername"
tag_value="onefs-v1"

aws ec2 --profile=udsawsadmin describe-vpcs --query "Vpcs[*].{VpcId:VpcId, Name:Tags[?Key=='Name']|[0].Value, CidrBlock:CidrBlock, State:State}" --output table
aws ec2 --profile=udsawsadmin describe-subnets --query "Subnets[*].{SubnetId:SubnetId, Name:Tags[?Key=='Name']|[0].Value, VpcId:VpcId, CidrBlock:CidrBlock, AvailabilityZone:AvailabilityZone}" --output table


aws iam --profile=udsawsadmin get-policy --policy-arn $(aws iam --profile=udsawsadmin list-policies --scope All --query "Policies[?PolicyName=='$policy_name'].Arn" --output text) --output table

aws iam --profile=udsawsadmin get-role --role-name onefs-runtime-role --output table

aws iam --profile=udsawsadmin list-instance-profiles --query "InstanceProfiles[*].InstanceProfileName" --output table

aws iam --profile=udsawsadmin list-instance-profiles-for-role --role-name onefs-runtime-role --output table


aws ec2 --profile=udsawsadmin describe-placement-groups --query "PlacementGroups[*].GroupName" --output table

aws ec2 --profile=udsawsadmin describe-placement-groups --filters "Name=tag:$tag_key,Values=$tag_value" --output table


aws ec2 --profile=udsawsadmin describe-security-groups --filters "Name=tag:$tag_key,Values=$tag_value" --query "SecurityGroups[*].{GroupId:GroupId, GroupName:GroupName}"

aws ec2 --profile=udsawsadmin describe-security-groups --filters "Name=tag:$tag_key,Values=$tag_value" 

aws ec2 --profile=udsawsadmin describe-network-interfaces --filters "Name=tag:$tag_key,Values=$tag_value" --query "NetworkInterfaces[*].{id:NetworkInterfaceId, Name:PrivateDnsName}"

aws ec2 --profile=udsawsadmin describe-network-interfaces --filters "Name=tag:$tag_key,Values=$tag_value" --output table


aws ec2 --profile=udsawsadmin describe-vpc-endpoints --query "VpcEndpoints[*].VpcEndpointId" 

aws ec2 --profile=udsawsadmin describe-instances --filters "Name=tag:$tag_key,Values=$tag_value" --query "Reservations[*].Instances[*].{id:InstanceId, Name:Tags[?Key=='Name']|[0].Value}"
aws ec2 --profile=udsawsadmin describe-instances --filters "Name=tag:$tag_key,Values=$tag_value" 





###get volume mapping for an instance
###get instance name & id
aws ec2 --profile=udsawsadmin describe-instances --filters "Name=tag:$tag_key,Values=$tag_value" --query "Reservations[*].Instances[*].{id:InstanceId, Name:Tags[?Key=='Name']|[0].Value}" --output table

-modify node name value: Name,Values=onefs-v1-node1
instance_id=$(aws ec2 describe-instances  --profile=udsawsadmin  --query 'Reservations[*].Instances[*].{Instance:InstanceId}'  --output text  --filters "Name=tag:Name,Values=onefs-v1-node1")
aws ec2 describe-volumes --profile=udsawsadmin --filters "Name=attachment.instance-id,Values=$instance_id" --output table
  

 














######
aws iam --profile=udsawsadmin delete-instance-profile --instance-profile-name onefs-runtime-instance-profile